{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Cadastrar(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    nome = _useState2[0],\n    setNome = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    cpf = _useState4[0],\n    setCpf = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    dataNascimento = _useState6[0],\n    setDataNascimento = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    endereco = _useState8[0],\n    setEndereco = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    numero = _useState10[0],\n    setNumero = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    bairro = _useState12[0],\n    setBairro = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    telefone = _useState14[0],\n    setTelefone = _useState14[1];\n  var handleEnviar = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var dados = {\n        nome: nome,\n        cpf: cpf,\n        dataNascimento: dataNascimento,\n        endereco: endereco,\n        numero: numero,\n        bairro: bairro,\n        telefone: telefone\n      };\n      try {\n        var dadosClientes = yield AsyncStorage.getItem('Clientes');\n        var clientesSalvos = [];\n        if (dadosClientes !== null) {\n          clientesSalvos = JSON.parse(dadosClientes);\n        }\n        clientesSalvos.push(dados);\n        yield AsyncStorage.setItem('Clientes', JSON.stringify(clientesSalvos));\n        console.log('Dados de cadastro salvos com sucesso!');\n        navigation.navigate('Clientes');\n      } catch (error) {\n        console.log('Erro ao salvar os dados de cadastro:', error);\n      }\n    });\n    return function handleEnviar() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.container1\n    }), _jsxs(View, {\n      style: styles.container2,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Nome Completo\",\n        placeholderTextColor: \"gray\",\n        value: nome,\n        onChangeText: setNome\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"CPF\",\n        placeholderTextColor: \"gray\",\n        value: cpf,\n        onChangeText: setCpf\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Data de Nascimento\",\n        placeholderTextColor: \"gray\",\n        value: dataNascimento,\n        onChangeText: setDataNascimento\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Endere\\xE7o\",\n        placeholderTextColor: \"gray\",\n        value: endereco,\n        onChangeText: setEndereco\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"N\\xFAmero\",\n        placeholderTextColor: \"gray\",\n        value: numero,\n        onChangeText: setNumero\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Bairro\",\n        placeholderTextColor: \"gray\",\n        value: bairro,\n        onChangeText: setBairro\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Telefone\",\n        placeholderTextColor: \"gray\",\n        value: telefone,\n        onChangeText: setTelefone\n      }), _jsx(TouchableOpacity, {\n        style: styles.bott,\n        onPress: handleEnviar,\n        children: _jsx(Text, {\n          style: styles.txt,\n          children: \"ENVIAR\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.container3\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  logo: {\n    width: 300,\n    height: 250,\n    alignSelf: 'center'\n  },\n  container: {\n    flex: 1,\n    height: '100%',\n    width: '100%',\n    backgroundColor: '#fff'\n  },\n  container1: {\n    backgroundColor: '#000',\n    width: '100%',\n    height: '7%',\n    top: -60\n  },\n  container2: {\n    width: '100%',\n    height: '86%'\n  },\n  container3: {\n    backgroundColor: '#000',\n    width: '100%',\n    height: '7%',\n    bottom: -40\n  },\n  input: {\n    marginTop: 20,\n    alignSelf: 'center',\n    width: '80%',\n    height: 55,\n    borderRadius: 10,\n    borderWidth: 1,\n    paddingLeft: 25,\n    paddingRight: 25,\n    fontSize: 20,\n    fontStyle: 'italic'\n  },\n  bott: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#000',\n    width: '40%',\n    height: 65,\n    borderRadius: 50,\n    marginTop: 40\n  },\n  txt: {\n    color: '#FFF'\n  }\n});\nexport default Cadastrar;","map":{"version":3,"names":["React","useState","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Cadastrar","_ref","navigation","_useState","_useState2","_slicedToArray","nome","setNome","_useState3","_useState4","cpf","setCpf","_useState5","_useState6","dataNascimento","setDataNascimento","_useState7","_useState8","endereco","setEndereco","_useState9","_useState10","numero","setNumero","_useState11","_useState12","bairro","setBairro","_useState13","_useState14","telefone","setTelefone","handleEnviar","_ref2","_asyncToGenerator","dados","dadosClientes","getItem","clientesSalvos","JSON","parse","push","setItem","stringify","console","log","navigate","error","apply","arguments","SafeAreaView","style","styles","container","children","View","container1","container2","TextInput","input","placeholder","placeholderTextColor","value","onChangeText","TouchableOpacity","bott","onPress","Text","txt","container3","StyleSheet","create","logo","width","height","alignSelf","flex","backgroundColor","top","bottom","marginTop","borderRadius","borderWidth","paddingLeft","paddingRight","fontSize","fontStyle","alignItems","justifyContent","color"],"sources":["C:/Users/Fernanda/Documents/GitHub/Projeto_Mobile/src/Views/Cadastrar.js"],"sourcesContent":["import { Text, View, TextInput, TouchableOpacity, SafeAreaView, StyleSheet } from 'react-native';\r\nimport React, { useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nfunction Cadastrar({ navigation }) {\r\n    const [nome, setNome] = useState('');\r\n    const [cpf, setCpf] = useState('');\r\n    const [dataNascimento, setDataNascimento] = useState('');\r\n    const [endereco, setEndereco] = useState('');\r\n    const [numero, setNumero] = useState('');\r\n    const [bairro, setBairro] = useState('');\r\n    const [telefone, setTelefone] = useState('');\r\n\r\n    const handleEnviar = async () => {\r\n        // Cria um objeto com os dados preenchidos\r\n        const dados = {\r\n            nome,\r\n            cpf,\r\n            dataNascimento,\r\n            endereco,\r\n            numero,\r\n            bairro,\r\n            telefone\r\n        };\r\n    \r\n        try {\r\n            // Obtém os dados existentes do AsyncStorage\r\n            const dadosClientes = await AsyncStorage.getItem('Clientes');\r\n    \r\n            let clientesSalvos = [];\r\n            if (dadosClientes !== null) {\r\n                // Converte os dados existentes em um array de objetos\r\n                clientesSalvos = JSON.parse(dadosClientes);\r\n            }\r\n    \r\n            // Adiciona os novos dados ao array de objetos\r\n            clientesSalvos.push(dados);\r\n    \r\n            // Salva o array de objetos atualizado no AsyncStorage\r\n            await AsyncStorage.setItem('Clientes', JSON.stringify(clientesSalvos));\r\n            console.log('Dados de cadastro salvos com sucesso!');\r\n            \r\n            // Navega para a próxima tela após salvar os dados\r\n            navigation.navigate('Clientes');\r\n        } catch (error) {\r\n            console.log('Erro ao salvar os dados de cadastro:', error);\r\n        }\r\n    };\r\n    \r\n    \r\n    \r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <View style={styles.container1}></View>\r\n            <View style={styles.container2}>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='Nome Completo'\r\n                    placeholderTextColor='gray'\r\n                    value={nome}\r\n                    onChangeText={setNome}\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='CPF'\r\n                    placeholderTextColor='gray'\r\n                    value={cpf}\r\n                    onChangeText={setCpf}\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='Data de Nascimento'\r\n                    placeholderTextColor='gray'\r\n                    value={dataNascimento}\r\n                    onChangeText={setDataNascimento}\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='Endereço'\r\n                    placeholderTextColor='gray'\r\n                    value={endereco}\r\n                    onChangeText={setEndereco}\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='Número'\r\n                    placeholderTextColor='gray'\r\n                    value={numero}\r\n                    onChangeText={setNumero}\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='Bairro'\r\n                    placeholderTextColor='gray'\r\n                    value={bairro}\r\n                    onChangeText={setBairro}\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='Telefone'\r\n                    placeholderTextColor='gray'\r\n                    value={telefone}\r\n                    onChangeText={setTelefone}\r\n                />\r\n                \r\n                <TouchableOpacity style={styles.bott} onPress={handleEnviar}>\r\n                    <Text style={styles.txt}>ENVIAR</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.container3}></View>\r\n        </SafeAreaView>\r\n    );\r\n}\r\n\r\n  \r\n  \r\n  const styles = StyleSheet.create({\r\n    logo:{\r\n        width:300,\r\n        height:250,\r\n        alignSelf:'center',\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      height:'100%',\r\n      width:'100%',\r\n      backgroundColor:'#fff'\r\n      // Defina os estilos desejados para o container aqui\r\n    },\r\n\r\n    container1:{\r\n        backgroundColor:'#000',\r\n        width:'100%',\r\n        height:'7%',\r\n        top:-60,\r\n\r\n    },\r\n    container2:{\r\n        width:'100%',\r\n        height:'86%',\r\n\r\n\r\n    },\r\n    container3:{\r\n        backgroundColor:'#000',\r\n        width:'100%',\r\n        height:'7%',\r\n        bottom:-40,\r\n\r\n\r\n    },\r\n\r\n    input:{\r\n        marginTop:20,\r\n        alignSelf:'center',\r\n        width:'80%',\r\n        height:55,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        paddingLeft:25,\r\n        paddingRight:25,\r\n        fontSize:20,\r\n        fontStyle:'italic',\r\n\r\n\r\n    },\r\n    bott:{\r\n        alignSelf:'center',\r\n        \r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        backgroundColor:'#000',\r\n        width:'40%',\r\n        height:65,\r\n        borderRadius:50,\r\n        marginTop:40,\r\n\r\n    },\r\n    txt:{\r\n        color:'#FFF',\r\n    },\r\n  \r\n  });\r\n  export default Cadastrar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}