{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar PDFPage = _createClass(function PDFPage() {\n  var _this = this;\n  _classCallCheck(this, PDFPage);\n  this.page = {\n    actions: []\n  };\n  this.setMediaBox = function (width, height) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (_this.page.pageIndex !== undefined) {\n      throw new Error('Cannot set media box on modified page!');\n    }\n    _this.page.mediaBox = _objectSpread(_objectSpread({\n      x: 0,\n      y: 0\n    }, options), {}, {\n      width: width,\n      height: height\n    });\n    return _this;\n  };\n  this.drawText = function (value) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var textAction = _objectSpread(_objectSpread({\n      x: 0,\n      y: 0,\n      color: '#000000',\n      fontSize: 12,\n      fontName: 'Times New Roman'\n    }, options), {}, {\n      type: 'text',\n      value: value\n    });\n    _this.page.actions.push(textAction);\n    return _this;\n  };\n  this.drawRectangle = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var rectAction = _objectSpread(_objectSpread({\n      x: 0,\n      y: 0,\n      width: 50,\n      height: 50,\n      color: '#000000'\n    }, options), {}, {\n      type: 'rectangle'\n    });\n    _this.page.actions.push(rectAction);\n    return _this;\n  };\n  this.drawImage = function (imagePath, imageType) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (!['png', 'jpg'].includes(imageType)) {\n      throw new Error('Only JPG and PNG images are currently supported!');\n    }\n    if (typeof options.imageSource !== 'undefined' && !['assets', 'path'].includes(options.imageSource)) {\n      throw new Error('Only images from \"assets\" and \"path\" are currently supported!');\n    }\n    var imageAction = _objectSpread(_objectSpread({\n      x: 0,\n      y: 0,\n      source: 'path'\n    }, options), {}, {\n      type: 'image',\n      imagePath: imagePath,\n      imageType: imageType\n    });\n    _this.page.actions.push(imageAction);\n    return _this;\n  };\n});\nPDFPage.create = function () {\n  var newPage = new PDFPage();\n  newPage.page.mediaBox = {\n    x: 0,\n    y: 0,\n    width: 250,\n    height: 500\n  };\n  return newPage;\n};\nPDFPage.modify = function (pageIndex) {\n  var newPage = new PDFPage();\n  newPage.page.pageIndex = pageIndex;\n  return newPage;\n};\nexport { PDFPage as default };","map":{"version":3,"names":["PDFPage","_createClass","_this","_classCallCheck","page","actions","setMediaBox","width","height","options","arguments","length","undefined","pageIndex","Error","mediaBox","_objectSpread","x","y","drawText","value","textAction","color","fontSize","fontName","type","push","drawRectangle","rectAction","drawImage","imagePath","imageType","includes","imageSource","imageAction","source","create","newPage","modify","default"],"sources":["C:/Users/Fernanda/Documents/GitHub/Projeto_Mobile/node_modules/react-native-pdf-lib/js/src/PDFPage.js"],"sourcesContent":["/* @flow */\n\nexport type TextAction = {\n  type: 'text',\n  x: number,\n  y: number,\n  color: string,\n  fontSize: number,\n  value: string,\n};\n\nexport type RectangleAction = {\n  type: 'rectangle',\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  color: string,\n};\n\nexport type ImageAction = {\n  type: 'image',\n  imagePath: string,\n  imageType: string,\n  imageSource: string,\n  x: number,\n  y: number,\n  width?: number, // If don't have width & height, will use actual dimensions\n  height?: number,\n};\n\nexport type PageActions =\n    TextAction\n  | RectangleAction\n  | ImageAction\n  ;\n\nexport type PageAction = {\n  pageIndex?: number, // Not allowed in created pages\n  mediaBox?: { // Not allowed for modified pages\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n  },\n  actions: PageActions[],\n};\n\nexport default class PDFPage {\n  page: PageAction = {\n    actions: [],\n  };\n\n  static create = () => {\n    const newPage = new PDFPage();\n    newPage.page.mediaBox = { x: 0, y: 0, width: 250, height: 500 };\n    return newPage;\n  }\n\n  static modify = (pageIndex) => {\n    const newPage = new PDFPage();\n    newPage.page.pageIndex = pageIndex;\n    return newPage;\n  }\n\n  setMediaBox = (\n    width: number,\n    height: number,\n    options: { x?: number, y?: number }={},\n  ) => {\n    if (this.page.pageIndex !== undefined) {\n      throw new Error('Cannot set media box on modified page!');\n    }\n    this.page.mediaBox = {\n      x: 0,\n      y: 0,\n      ...options,\n      width,\n      height,\n    };\n    return this;\n  }\n\n  drawText = (\n    value: string,\n    options: {\n      x?: number,\n      y?: number,\n      color?: string,\n      fontSize?: number,\n    }={}\n  ) => {\n    const textAction: TextAction = {\n      x: 0,\n      y: 0,\n      color: '#000000',\n      fontSize: 12,\n      fontName: 'Times New Roman',\n      ...options,\n      type: 'text',\n      value,\n    };\n    this.page.actions.push(textAction);\n    return this;\n  }\n\n  drawRectangle = (\n    options: {\n      x?: number,\n      y?: number,\n      width?: number,\n      height?: number,\n      color?: string,\n    }={}\n  ) => {\n    const rectAction: RectangleAction = {\n      x: 0,\n      y: 0,\n      width: 50,\n      height: 50,\n      color: '#000000',\n      ...options,\n      type: 'rectangle',\n    };\n    this.page.actions.push(rectAction);\n    return this;\n  }\n\n  drawImage = (\n      imagePath: string,\n      imageType: string,\n      options: {\n        x?: number,\n        y?: number,\n        width?: number,\n        height?: number,\n        imageSource?: string\n      }={}\n  ) => {\n    // TODO: Add logic using ReactNative.Image to automatically preserve image\n    // dimensions!\n    if (!['png', 'jpg'].includes(imageType)) {\n      throw new Error('Only JPG and PNG images are currently supported!');\n    }\n    if (typeof options.imageSource !== 'undefined' && !['assets', 'path'].includes(options.imageSource)) {\n      throw new Error('Only images from \"assets\" and \"path\" are currently supported!');\n    }\n    const imageAction: ImageAction = {\n      x: 0,\n      y: 0,\n      source: 'path',\n      ...options,\n      type: 'image',\n      imagePath,\n      imageType\n    };\n    this.page.actions.push(imageAction);\n    return this;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}