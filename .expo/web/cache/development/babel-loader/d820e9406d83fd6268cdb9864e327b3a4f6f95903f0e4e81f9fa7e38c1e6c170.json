{"ast":null,"code":"var Platform = require(\"react-native-web/dist/exports/Platform\").default;\nvar NativeModules = require(\"react-native-web/dist/exports/NativeModules\").default;\nvar RNSendIntentAndroid = NativeModules.SendIntentAndroid || {};\nvar SendIntentAndroid = {\n  TEXT_PLAIN: Platform.OS === \"android\" ? RNSendIntentAndroid.TEXT_PLAIN : \"text/plain\",\n  TEXT_HTML: Platform.OS === \"android\" ? RNSendIntentAndroid.TEXT_HTML : \"text/html\",\n  sendText: function sendText(config) {\n    if (\"title\" in config && config.title != null && config.title.length > 0) {\n      RNSendIntentAndroid.sendTextWithTitle(config.title, config.text, config.type || \"text/plain\");\n    } else {\n      RNSendIntentAndroid.sendText(config.text, config.type || \"text/plain\");\n    }\n  },\n  sendPhoneCall: function sendPhoneCall(phoneNumber) {\n    var phoneAppOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    RNSendIntentAndroid.sendPhoneCall(phoneNumber, phoneAppOnly);\n  },\n  sendPhoneDial: function sendPhoneDial(phoneNumber) {\n    var phoneAppOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    RNSendIntentAndroid.sendPhoneDial(phoneNumber, phoneAppOnly);\n  },\n  sendSms: function sendSms(phoneNumber) {\n    var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    RNSendIntentAndroid.sendSms(phoneNumber, body);\n  },\n  addCalendarEvent: function addCalendarEvent(config) {\n    RNSendIntentAndroid.addCalendarEvent(config.title, config.description, config.startDate, config.endDate, config.recurrence, config.location, config.isAllDay || false);\n  },\n  isAppInstalled: function isAppInstalled(packageName) {\n    return RNSendIntentAndroid.isAppInstalled(packageName);\n  },\n  installRemoteApp: function installRemoteApp(uri, saveAs) {\n    return RNSendIntentAndroid.installRemoteApp(uri, saveAs);\n  },\n  openCalendar: function openCalendar() {\n    RNSendIntentAndroid.openCalendar();\n  },\n  sendMail: function sendMail(mail) {\n    var subject = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    var body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n    RNSendIntentAndroid.sendMail(mail, subject, body);\n  },\n  openChooserWithOptions: function openChooserWithOptions(options, title) {\n    RNSendIntentAndroid.openChooserWithOptions(options, title);\n  },\n  openChooserWithMultipleOptions: function openChooserWithMultipleOptions(options, title) {\n    RNSendIntentAndroid.openChooserWithMultipleOptions(options, title);\n  },\n  openMaps: function openMaps(query) {\n    RNSendIntentAndroid.openMaps(query);\n  },\n  openCamera: function openCamera() {\n    RNSendIntentAndroid.openCamera();\n  },\n  openMapsWithRoute: function openMapsWithRoute(query, mode) {\n    RNSendIntentAndroid.openMapsWithRoute(query, mode);\n  },\n  shareTextToLine: function shareTextToLine(options) {\n    RNSendIntentAndroid.shareTextToLine(options);\n  },\n  shareImageToInstagram: function shareImageToInstagram(type, mediaPath) {\n    RNSendIntentAndroid.shareImageToInstagram(type, mediaPath);\n  },\n  openSettings: function openSettings(settingsName) {\n    RNSendIntentAndroid.openSettings(settingsName);\n  },\n  getVoiceMailNumber: function getVoiceMailNumber() {\n    return RNSendIntentAndroid.getVoiceMailNumber();\n  },\n  getPhoneNumber: function getPhoneNumber() {\n    return RNSendIntentAndroid.getPhoneNumber();\n  },\n  gotoHomeScreen: function gotoHomeScreen() {\n    return RNSendIntentAndroid.gotoHomeScreen();\n  },\n  openApp: function openApp(packageName, extras) {\n    return RNSendIntentAndroid.openApp(packageName, extras || {});\n  },\n  openAppWithData: function openAppWithData(packageName, dataUri, mimeType, extras) {\n    return RNSendIntentAndroid.openAppWithData(packageName, dataUri, mimeType, extras || {});\n  },\n  openChromeIntent: function openChromeIntent(dataUri) {\n    return RNSendIntentAndroid.openChromeIntent(dataUri);\n  },\n  openFileChooser: function openFileChooser(options, title) {\n    return RNSendIntentAndroid.openFileChooser(options, title);\n  },\n  openFilePicker: function openFilePicker(_ref, callback) {\n    var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? \"*/*\" : _ref$type,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? \"Choose File\" : _ref$title;\n    return RNSendIntentAndroid.openFilePicker({\n      type: type,\n      title: title\n    }, callback);\n  },\n  openEmailApp: function openEmailApp() {\n    RNSendIntentAndroid.openEmailApp();\n  },\n  openAllEmailApp: function openAllEmailApp() {\n    RNSendIntentAndroid.openAllEmailApp();\n  },\n  openDownloadManager: function openDownloadManager() {\n    RNSendIntentAndroid.openDownloadManager();\n  },\n  requestIgnoreBatteryOptimizations: function requestIgnoreBatteryOptimizations() {\n    return RNSendIntentAndroid.requestIgnoreBatteryOptimizations();\n  },\n  showIgnoreBatteryOptimizationsSettings: function showIgnoreBatteryOptimizationsSettings() {\n    RNSendIntentAndroid.showIgnoreBatteryOptimizationsSettings();\n  },\n  openAppWithUri: function openAppWithUri(intentUri, extras) {\n    return RNSendIntentAndroid.openAppWithUri(intentUri, extras || {});\n  }\n};\nmodule.exports = SendIntentAndroid;","map":{"version":3,"names":["RNSendIntentAndroid","NativeModules","SendIntentAndroid","TEXT_PLAIN","Platform","OS","TEXT_HTML","sendText","config","title","length","sendTextWithTitle","text","type","sendPhoneCall","phoneNumber","phoneAppOnly","arguments","undefined","sendPhoneDial","sendSms","body","addCalendarEvent","description","startDate","endDate","recurrence","location","isAllDay","isAppInstalled","packageName","installRemoteApp","uri","saveAs","openCalendar","sendMail","mail","subject","openChooserWithOptions","options","openChooserWithMultipleOptions","openMaps","query","openCamera","openMapsWithRoute","mode","shareTextToLine","shareImageToInstagram","mediaPath","openSettings","settingsName","getVoiceMailNumber","getPhoneNumber","gotoHomeScreen","openApp","extras","openAppWithData","dataUri","mimeType","openChromeIntent","openFileChooser","openFilePicker","_ref","callback","_ref$type","_ref$title","openEmailApp","openAllEmailApp","openDownloadManager","requestIgnoreBatteryOptimizations","showIgnoreBatteryOptimizationsSettings","openAppWithUri","intentUri","module","exports"],"sources":["C:/Users/Fernanda/Documents/GitHub/Projeto_Mobile/node_modules/react-native-send-intent/index.js"],"sourcesContent":["/**\n * @providesModule SendIntentAndroid\n */\n\nvar { Platform, NativeModules } = require(\"react-native\");\nvar RNSendIntentAndroid = NativeModules.SendIntentAndroid || {};\n\nvar SendIntentAndroid = {\n    TEXT_PLAIN: Platform.OS === \"android\" ? RNSendIntentAndroid.TEXT_PLAIN : \"text/plain\",\n    TEXT_HTML: Platform.OS === \"android\" ? RNSendIntentAndroid.TEXT_HTML : \"text/html\",\n    sendText(config) {\n        if (\"title\" in config && config.title != null && config.title.length > 0) {\n            RNSendIntentAndroid.sendTextWithTitle(config.title, config.text, config.type || \"text/plain\");\n        } else {\n            RNSendIntentAndroid.sendText(config.text, config.type || \"text/plain\");\n        }\n    },\n    sendPhoneCall(phoneNumber, phoneAppOnly = false) {\n        RNSendIntentAndroid.sendPhoneCall(phoneNumber, phoneAppOnly);\n    },\n    sendPhoneDial(phoneNumber, phoneAppOnly = false) {\n        RNSendIntentAndroid.sendPhoneDial(phoneNumber, phoneAppOnly);\n    },\n    sendSms(phoneNumber, body = null) {\n        RNSendIntentAndroid.sendSms(phoneNumber, body);\n    },\n    addCalendarEvent(config) {\n        RNSendIntentAndroid.addCalendarEvent(\n            config.title,\n            config.description,\n            config.startDate,\n            config.endDate,\n            config.recurrence,\n            config.location,\n            config.isAllDay || false\n        );\n    },\n    isAppInstalled(packageName) {\n        return RNSendIntentAndroid.isAppInstalled(packageName);\n    },\n    installRemoteApp(uri, saveAs) {\n        return RNSendIntentAndroid.installRemoteApp(uri, saveAs);\n    },\n    openCalendar() {\n        RNSendIntentAndroid.openCalendar();\n    },\n    sendMail(mail, subject = \"\", body = \"\") {\n        RNSendIntentAndroid.sendMail(mail, subject, body);\n    },\n    openChooserWithOptions(options, title) {\n        RNSendIntentAndroid.openChooserWithOptions(options, title);\n    },\n    openChooserWithMultipleOptions(options, title) {\n        RNSendIntentAndroid.openChooserWithMultipleOptions(options, title);\n    },\n    openMaps(query) {\n        RNSendIntentAndroid.openMaps(query);\n    },\n    openCamera() {\n        RNSendIntentAndroid.openCamera();\n    },\n    openMapsWithRoute(query, mode) {\n        RNSendIntentAndroid.openMapsWithRoute(query, mode);\n    },\n    shareTextToLine(options) {\n        RNSendIntentAndroid.shareTextToLine(options);\n    },\n    shareImageToInstagram(type, mediaPath) {\n        RNSendIntentAndroid.shareImageToInstagram(type, mediaPath);\n    },\n    openSettings(settingsName) {\n        RNSendIntentAndroid.openSettings(settingsName);\n    },\n    getVoiceMailNumber() {\n        return RNSendIntentAndroid.getVoiceMailNumber();\n    },\n    getPhoneNumber() {\n        return RNSendIntentAndroid.getPhoneNumber();\n    },\n    gotoHomeScreen() {\n        return RNSendIntentAndroid.gotoHomeScreen();\n    },\n    openApp(packageName, extras) {\n        return RNSendIntentAndroid.openApp(packageName, extras || {});\n    },\n    /** Creates an ACTION_VIEW Intent for the given package with the given data, optional mimetype and extras.\n     *  The extras are an object containing String, or other objects of the following format:\n     * { type: \"int\", value: 4 }\n     * Other possible types are int, short, byte, char, long and float.\n     */\n    openAppWithData(packageName, dataUri, mimeType, extras) {\n        return RNSendIntentAndroid.openAppWithData(packageName, dataUri, mimeType, extras || {});\n    },\n    /**\n     * This method follows the chrome intent syntax: https://developer.chrome.com/multidevice/android/intents.\n     *\n     * Opens intent with package name defined in the dataUri field.\n     * When intent cannot be resolved, open the URL in browser_fallback_url in the mobile's browser.\n     * @param {string} dataUri - the intent url. Looks like: `intent://www.spm.com/qrlogin#Intent;scheme=https;package=example.package;S.browser_fallback_url=https://www.spm.com/download;end`.\n     * @returns {Promise<boolean>} true if app or fallback URL is opened, false otherwise.\n     */\n    openChromeIntent(dataUri) {\n        return RNSendIntentAndroid.openChromeIntent(dataUri);\n    },\n    openFileChooser(options, title) {\n        return RNSendIntentAndroid.openFileChooser(options, title);\n    },\n    openFilePicker({ type = \"*/*\", title = \"Choose File\" }, callback) {\n        return RNSendIntentAndroid.openFilePicker({ type, title }, callback);\n    },\n    openEmailApp() {\n        RNSendIntentAndroid.openEmailApp();\n    },\n    openAllEmailApp() {\n        RNSendIntentAndroid.openAllEmailApp();\n    },\n    openDownloadManager() {\n        RNSendIntentAndroid.openDownloadManager();\n    },\n    requestIgnoreBatteryOptimizations() {\n        return RNSendIntentAndroid.requestIgnoreBatteryOptimizations();\n    },\n    showIgnoreBatteryOptimizationsSettings() {\n        RNSendIntentAndroid.showIgnoreBatteryOptimizationsSettings();\n    },\n    openAppWithUri(intentUri, extras) {\n        return RNSendIntentAndroid.openAppWithUri(intentUri, extras || {});\n    },\n};\n\nmodule.exports = SendIntentAndroid;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}